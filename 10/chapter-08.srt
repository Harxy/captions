1
00:00:00,000 --> 00:00:02,620
Chapter 8: Adding a build system.

2
00:00:02,700 --> 00:00:06,480
So... I think we should go back to the challenge. 

3
00:00:06,480 --> 00:00:13,160
Well we have this, but not the interface.

4
00:00:13,190 --> 00:00:16,470
We don't have play and stop and
there's no way to modify the tempo,

5
00:00:16,500 --> 00:00:19,660
unless we change [the code],
and that's not very dynamic!

6
00:00:19,690 --> 00:00:21,100
DN: Right, change the code.

7
00:00:21,110 --> 00:00:24,550
SP: Yes, and reload. No! That's not very funny.

8
00:00:24,550 --> 00:00:30,450
So... I am lazy so I'm going to use a
component that renders all those buttons for you.

9
00:00:30,460 --> 00:00:34,440
Because I just don't want to do this over and over.

10
00:00:34,440 --> 00:00:41,870
I suppose it's good to be lazy as a programmer,
if you work to make sure you don't have to work again.

11
00:00:41,870 --> 00:00:44,940
So I made a component and used it with npm. 

12
00:00:44,940 --> 00:00:48,680
I need to initialize this thing as an npm project, first. 

13
00:00:48,680 --> 00:00:51,350
So I'm going to npm init this thingy. 

14
00:00:51,380 --> 00:00:53,100
Because that way I'll have a package JSON. 

15
00:00:53,120 --> 00:00:57,090
Otherwise it stores the thing
in `node_packages` folder, 

16
00:00:57,110 --> 00:01:00,120
but it doesn't save the
dependencies to packages.json.

17
00:01:00,130 --> 00:01:03,630
If I give you this repository and
I don't check in the node modules,

18
00:01:03,650 --> 00:01:06,800
you're going to have a hard time figuring out what dependencies I'm using.

19
00:01:06,800 --> 00:01:09,240
So this is important. 

20
00:01:09,240 --> 00:01:13,120
So I will just... OK fine, then clapping.

21
00:01:17,580 --> 00:01:22,430
No text no repo, clap.

22
00:01:22,460 --> 00:01:25,440
[Silence]

23
00:01:28,490 --> 00:01:32,110
You have to do it that way or it doesn't like it.

24
00:01:32,110 --> 00:01:34,470
Yes, it's perfect.

25
00:01:34,510 --> 00:01:41,420
In theory I should just press return, but I
like writing yes, it gives me confidence. [Laughter]

26
00:01:41,440 --> 00:01:44,530
I'm not going to mess with
something I shouldn't be messing with.

27
00:01:44,530 --> 00:01:47,870
So now I should be able to npm install things.

28
00:01:47,870 --> 00:01:51,740
They are going to be saved
as dependencies in packages.json.

29
00:01:51,740 --> 00:01:58,500
Otherwise if you say `npm install --save`,
it doesn't really save if there's no package.json.

30
00:01:58,500 --> 00:02:03,290
And I'm not going to create this
thing from scratch because I can't remember.

31
00:02:03,290 --> 00:02:06,350
[Silence]

32
00:02:07,290 --> 00:02:09,990
I think it's 'transport' - I hope it is.

33
00:02:10,000 --> 00:02:19,330
I don't know why they call it 'transport',
but in musical software it's always called that.

34
00:02:19,360 --> 00:02:23,770
It's the buttons with play and stop, the bpm thingy.

35
00:02:23,780 --> 00:02:27,720
I didn't want to be too
original so I just called it transport.

36
00:02:27,740 --> 00:02:31,730
DN: Yes, OK. I haven't heard
that before but it makes sense.

37
00:02:31,760 --> 00:02:37,050
SP: If you look up transport you will
find a lot of references to all the inaud, 

38
00:02:37,090 --> 00:02:39,610
especially MIDI creation software inaud transport.

39
00:02:39,650 --> 00:02:46,390
I think it's so you can transport
yourself around the song. I'm not sure.

40
00:02:46,490 --> 00:02:52,370
So this comes from this organization
that has more modules and things. 

41
00:02:52,370 --> 00:02:56,510
This is the one I'm using. 

42
00:02:56,510 --> 00:02:59,070
This is what it should look like, if you use example.

43
00:02:59,090 --> 00:03:02,050
But the one that we are going to
use doesn't really have any theming; 

44
00:03:02,050 --> 00:03:05,870
we can add whatever we want.

45
00:03:06,340 --> 00:03:11,910
SP: This uses web components
to render, this is a web component. 

46
00:03:12,340 --> 00:03:15,470
Because web components are not really clear yet.

47
00:03:15,480 --> 00:03:23,420
You need to install the component along with a
web component polyfill to make sure this can work.

48
00:03:23,420 --> 00:03:26,350
DN: Right.

49
00:03:26,380 --> 00:03:31,520
Maybe I should also document
this thing, because it's not obvious.

50
00:03:31,550 --> 00:03:35,570
There is a nice polyfill that you
can install, which is called webcomponents-lite, 

51
00:03:35,610 --> 00:03:41,200
and it installs the minimum that
I need for this, which is: registerElement. 

52
00:03:41,230 --> 00:03:44,350
and I think a couple more things, but I
just need to be able to do registerElement,

53
00:03:44,380 --> 00:03:46,940
because that's not enabled in Firefox yet. 

54
00:03:46,940 --> 00:03:46,950
It's available in Chrome, so if you
try things only in Chrome you don't notice. 
because that's not enabled in Firefox yet. 

55
00:03:46,950 --> 00:03:51,930
It's available in Chrome, so if you
try things only in Chrome you don't notice. 

56
00:03:51,970 --> 00:03:57,370
But if you try in Firefox without the
DOM things enabled, you'll find errors. 

57
00:03:57,370 --> 00:03:59,370
So this is going to polyfill the thing.

So I've got all these things and to load them I need to use require and this is not standard JavaScript. I could try to load these things from node modules, but it doesn't really work with this component because it uses other modules you should require.
So what I should use is webpack or browserify or something that takes my main.js that I've been using so far, and takes all the requirements and things and makes that just one bundle.
DN: Right.
SP: So this is when things get interesting.

I just used webpack last week and that was the first time I've installed it. It's pretty easy to use. I'm going to reuse it again. It's kind of like browserify, but it's got watch and things like that which are very convenient. With browserify you need to install watchify or something but webpack does everything for you. They call it 'Batteries included'. I like to play with things and assess them. People say that webpack generates smaller packages but I haven't really used it in a project enough to compare. I like to experiment with things.
DN: Yeah right.

