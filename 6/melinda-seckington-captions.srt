1
00:00:01,620 --> 00:00:03,632
NARRATOR: Welcome to Peer to Peer

2
00:00:03,632 --> 00:00:06,700
where you can hone your
skills by watching live coding videos.

3
00:00:08,128 --> 00:00:10,168
Our guest today is Melinda Seckington,

4
00:00:11,190 --> 00:00:16,056
She works as a Ruby developer
at FutureLearn, a social learning platform.

5
00:00:16,990 --> 00:00:19,552
Melinda co-organizes BarCap London,

6
00:00:19,560 --> 00:00:24,030
and participates regularly in
hack days, frequently winning them.

7
00:00:24,632 --> 00:00:26,968
I'm your host, Drew Neil.

8
00:00:26,960 --> 00:00:29,600
And the challenge that I set for Melinda is called...

9
00:00:29,624 --> 00:00:32,180
Building a Mechanical Turk system.

10
00:00:33,992 --> 00:00:37,184
DREW NEIL: So Melinda would you like
to start by reading the challenge.

11
00:00:37,700 --> 00:00:39,368
MELINDA SECKINGTON: Build a Mechanical Turk system.

12
00:00:39,368 --> 00:00:43,696
It should poll people for answers to yes/no
questions that are easily answered by humans

13
00:00:43,690 --> 00:00:45,288
but not by machines.

14
00:00:45,280 --> 00:00:48,264
If a certain number of people
give the same answer to a question,

15
00:00:48,264 --> 00:00:51,710
it's marked as resolved and
polling for that question ceases.

16
00:00:51,710 --> 00:00:55,536
If people give different answers to
the same question, then polling will continue

17
00:00:55,530 --> 00:00:59,480
until a consensus is reached and
that question can be marked as resolved.

18
00:00:59,500 --> 00:01:04,688
When someone has answered a question, they
may view a summary of all answers to that question,.

19
00:01:05,056 --> 00:01:06,670
DN: There's a little bit
more to the question actually.

20
00:01:06,670 --> 00:01:10,192
If you turn to the next page,
I've provided a sample question.

21
00:01:11,728 --> 00:01:14,032
MS: Is this a cat picture?

22
00:01:14,030 --> 00:01:17,456
DN: So I think most human beings
would have no trouble answering that

23
00:01:17,480 --> 00:01:21,328
Whereas it would be difficult to write
a program to give the right answer there.

24
00:01:21,328 --> 00:01:25,648
With more than 50% certainty.

25
00:01:26,600 --> 00:01:28,736
And there's another question as well.

26
00:01:28,824 --> 00:01:30,824
MS: Is this a squirrel picture?

27
00:01:30,820 --> 00:01:33,344
I think I can say no.

28
00:01:33,760 --> 00:01:34,872
DN: Right.

29
00:01:34,870 --> 00:01:38,504
So that's the kind of question I
thought we could be working with here.

30
00:01:39,440 --> 00:01:47,832
I've provided about 6 animal pictures, so
we can come up with a series of yes/no answers.

31
00:01:48,464 --> 00:01:51,144
Sorry, I mean questions where it's a yes/no answer.

32
00:01:51,344 --> 00:01:53,840
Most of them are going to be nonsense,

33
00:01:53,840 --> 00:01:57,536
but for each picture there
will be one correct answer.

34
00:01:57,536 --> 00:01:59,530
MS: Yes.

35
00:01:59,530 --> 00:02:03,560
DN: So that's what I thought we'd use as
a sample data set for this challenge.

36
00:02:05,400 --> 00:02:10,720
So, I haven't said which technology
you have to use to build this system.

37
00:02:11,080 --> 00:02:13,352
What would be your preference here?

38
00:02:14,008 --> 00:02:20,880
For me it would be Ruby and Rails
because I'm familiar with those already.

39
00:02:21,216 --> 00:02:24,840
Plus we've already got a very simple [inaudible]

40
00:02:24,840 --> 00:02:29,096
and [inaud] system so that people can [inaud]

41
00:02:30,870 --> 00:02:38,152
So, basically if we go to the log in page.

42
00:02:38,248 --> 00:02:42,072
And hit the register button.

43
00:02:42,072 --> 00:02:44,070
[inaudible]

44
00:02:44,070 --> 00:02:48,664
[Silence]

45
00:02:48,660 --> 00:02:49,696
Now we're logged in.

46
00:02:49,690 --> 00:02:51,944
DN: So it looks like a brand new rails app.

47
00:02:51,940 --> 00:02:53,032
MS: Yes.

48
00:02:53,030 --> 00:02:53,872
[They both talk at once]

49
00:02:53,870 --> 00:02:57,920
DN: [inaud] it already has a red
register route and a log in route.

50
00:02:57,920 --> 00:02:59,920
So if we go to log in again...

51
00:03:00,128 --> 00:03:04,904
You will be redirected to the main
page because you're already logged in.

52
00:03:04,900 --> 00:03:07,576
DN: So it can detect that
you're logged in, it remembers you.

53
00:03:07,776 --> 00:03:10,248
And, can you log out as well?

54
00:03:10,240 --> 00:03:13,496
MS: Yes, you just hit log out.

55
00:03:14,512 --> 00:03:18,736
Which you can't really see but you
can hit the log in page and log in again.

56
00:03:18,730 --> 00:03:22,272
So it's very very basic.

57
00:03:22,270 --> 00:03:25,464
DN: [inaud] we don't even have passwords.

58
00:03:25,460 --> 00:03:28,424
No its really basic.

59
00:03:28,420 --> 00:03:32,088
DN: Well that's fine, that's not going to be
an interesting part of this challenge I think.

60
00:03:32,080 --> 00:03:35,304
[New Chapter]

61
00:03:35,576 --> 00:03:42,080
MS: So, where to start.  It's a Mechanical
Turk system so we've got people... users.

62
00:03:43,568 --> 00:03:49,304
And we want to show each
user the questions that we have.

63
00:03:50,680 --> 00:03:56,560
So let's start with looking
at creating these questions.

64
00:03:58,392 --> 00:04:02,080
Each question will have an image.

65
00:04:02,620 --> 00:04:06,288
That's showing us the cat picture.

66
00:04:08,320 --> 00:04:12,272
Text, I guess, like... is this a cat picture

67
00:04:13,336 --> 00:04:15,856
So I guess let's start there.

68
00:04:15,850 --> 00:04:24,312
[Silence]

69
00:04:24,310 --> 00:04:27,056
Let's take the image.

70
00:04:28,600 --> 00:04:32,040
DN: So the string is going to
be a URL from where it listed it.

71
00:04:32,040 --> 00:04:33,280
MS: Yes.

72
00:04:33,280 --> 00:04:35,592
DN: In a public directory probably.

73
00:04:37,220 --> 00:04:43,872
Let's do... description.

74
00:04:45,416 --> 00:04:50,304
And string as well, because we don't want that to be too long.

75
00:04:50,850 --> 00:04:55,912
DN: So the challenge doesn't ask you to create
an admin area where people can create questions,

76
00:04:55,912 --> 00:05:00,360
We're going to pre-populate
the system with some questions?

77
00:05:00,360 --> 00:05:02,072
MS: Yes.

78
00:05:02,070 --> 00:05:04,016
So we want to...

79
00:05:04,010 --> 00:05:07,872
[Silence]

80
00:05:07,870 --> 00:05:12,904
This can be used [inaud] so that we can use db:seed.

81
00:05:13,200 --> 00:05:14,900
So I'll load that in.

82
00:05:16,224 --> 00:05:18,992
So I want to use the seeds [inaud]

83
00:05:18,992 --> 00:05:22,216
[Silence]

84
00:05:22,210 --> 00:05:29,424
DN: So this is just a plain Ruby file. It will
load the environments and then create models.

85
00:05:29,420 --> 00:05:30,016
MS: Yes.

86
00:05:30,010 --> 00:05:33,496
DN: And then you can
execute this file with a rake task.

87
00:05:34,072 --> 00:05:35,632
MS: Yes.

88
00:05:37,400 --> 00:05:40,104
Let me just set up our questions.

89
00:05:43,528 --> 00:05:48,384
So very simply we want to do question.create.

90
00:05:48,380 --> 00:05:55,952
[Silence]

91
00:05:55,960 --> 00:05:57,736
[Inaudible]

92
00:05:57,736 --> 00:06:01,816
[Silence]

93
00:06:01,810 --> 00:06:09,904
So we have, what did we say
before... image and... description.

94
00:06:09,904 --> 00:06:15,528
That would be the very very simple way of [inaud] it.

95
00:06:15,520 --> 00:06:18,832
But we want to do something
a little bit smarter I think.

96
00:06:22,136 --> 00:06:24,632
[inaud] the image is somewhere.

97
00:06:24,630 --> 00:06:30,008
DN: Yes, I gave them to you with your challenge,
but I don't think they're in your rails app yet.

98
00:06:30,000 --> 00:06:32,416
MS: No they're not.

99
00:06:33,488 --> 00:06:38,528
DN: When I first created these
images, I named them dog.jpeg, cat.jpeg

100
00:06:38,520 --> 00:06:43,280
And then I realised that was a little
opinionated so I changed it to 'Animal 1', 'Animal 2'...

101
00:06:43,280 --> 00:06:47,104
[Melinda thinks]

102
00:06:47,100 --> 00:06:49,704
MS: Yes, let's just throw them in the public.

103
00:06:51,552 --> 00:06:56,360
They'll maybe come up in a lesser place later

104
00:06:56,360 --> 00:07:04,408
[Silence]

105
00:07:04,400 --> 00:07:07,016
How do you loop through numbers again... times.

106
00:07:07,010 --> 00:07:12,920
[Silence]

107
00:07:12,976 --> 00:07:14,920
I'll double check the [inaud]

108
00:07:14,920 --> 00:07:18,272
It would be Ruby times rather than...

109
00:07:18,270 --> 00:07:26,272
[Silence]

110
00:07:26,270 --> 00:07:30,208
DN: That's a great way of finding
documentation, is that something to do with Alfred.

111
00:07:30,200 --> 00:07:32,160
MS: Yes so...

112
00:07:32,160 --> 00:07:35,752
DN: So you've got it searching rails documentation.

113
00:07:35,750 --> 00:07:40,728
MS: Yes, it's a work flow that's called Dev Doctor.

114
00:07:40,720 --> 00:07:46,696
And it's not just for rails, it's for most
programming language that you can think of.

115
00:07:47,088 --> 00:07:48,216
DN: Oh that's good.

116
00:07:48,210 --> 00:07:50,576
MS: Yes, it's really handy.

117
00:07:52,120 --> 00:07:54,408
Yes I was right.

118
00:07:54,400 --> 00:07:57,488
I have to question myself sometimes.

119
00:07:57,480 --> 00:08:19,256
[Silence]

120
00:08:19,250 --> 00:08:20,976
DN: Oh that's...

121
00:08:21,072 --> 00:08:25,056
MS: Yes, sublime, like soup, try to open

122
00:08:25,568 --> 00:08:28,752
DN: [inaud]

123
00:08:30,880 --> 00:08:40,960
DN: They could be called Animal-1.jpeg, Animal-2...
I guess six times is going to be 0 to 5, isn't it?

124
00:08:40,960 --> 00:08:42,720
MS: Yes.

125
00:08:42,720 --> 00:09:08,216
[Silence]

126
00:09:08,210 --> 00:09:14,216
I'm sure we can make this smarter, in the sense that...

127
00:09:15,968 --> 00:09:18,584
Well, I guess what we can do here is...

128
00:09:18,580 --> 00:09:27,232
[Silence]

129
00:09:27,230 --> 00:09:29,728
Which animal shall we actually have?

130
00:09:31,136 --> 00:09:32,752
DN: That's a good question.

131
00:09:32,750 --> 00:09:35,648
Hedgehog, Squirrel , Goat...

132
00:09:36,104 --> 00:09:38,736
DN: Yes, let's Goat!

133
00:09:38,736 --> 00:09:40,730
MS: So...

134
00:09:40,730 --> 00:10:06,112
[Silence]

135
00:10:06,110 --> 00:10:09,192
Dog, Cat, Cow...

136
00:10:10,360 --> 00:10:15,056
DN: You're definitely not a
machine, you make that look easy.

137
00:10:15,050 --> 00:10:46,008
[Silence]

138
00:10:46,000 --> 00:10:48,512
So... I want to do that.

139
00:10:51,560 --> 00:10:54,496
Two times.

140
00:10:55,232 --> 00:11:00,776
So now we then get [inaud] for every single animal.

141
00:11:03,790 --> 00:11:08,576
Basically for every image we create six questions

142
00:11:08,584 --> 00:11:12,792
asking whether or not it's
all the other animals as well.

143
00:11:12,790 --> 00:11:14,056
DN: OK.

144
00:11:14,064 --> 00:11:15,480
MS: So I think this should work.

145
00:11:15,480 --> 00:11:17,592
DN: So we'll end up with 36.

146
00:11:17,752 --> 00:11:20,528
MS: Yes, 36 questions.

147
00:11:21,800 --> 00:11:23,792
DN: Where most of them are wrong answers.

148
00:11:23,808 --> 00:11:25,720
MS: Yes.

149
00:11:26,608 --> 00:11:30,288
So let's see...

150
00:11:30,280 --> 00:11:32,848
[inaud] first because we haven't done that before.

151
00:11:36,328 --> 00:11:38,928
I only hope that this doesn't blow up.

152
00:11:38,920 --> 00:11:47,648
[Silence]

153
00:11:47,640 --> 00:11:50,032
36, how about that!

154
00:11:50,864 --> 00:11:53,168
And then [inaud] the

155
00:11:54,144 --> 00:11:56,496
No, I don't call them [inaud] image.

156
00:11:59,200 --> 00:12:01,968
We should have 6 of each of them.

157
00:12:01,960 --> 00:12:09,144
[Silence]

158
00:12:09,140 --> 00:12:11,832
DN: Is this a hedgehog, is this a squirrel, goat

159
00:12:12,592 --> 00:12:15,088
MS: And I forgot to put a question mark at the end.

160
00:12:16,950 --> 00:12:20,136
DN: Well you could even hard
code that. It is a question.

161
00:12:22,240 --> 00:12:26,960
DN: I could do that... so let's just delete them all again.

162
00:12:27,016 --> 00:12:33,536
[Silence]

163
00:12:33,530 --> 00:12:36,440
MS: I'll just analyze the question [inaud].

164
00:12:36,440 --> 00:12:56,344
[Silence]

165
00:12:56,340 --> 00:12:57,888
There we go, that's nicer.

166
00:12:58,016 --> 00:12:59,880
DN: That does look nice.

167
00:13:01,080 --> 00:13:02,080
[inaud]

168
00:13:02,184 --> 00:13:05,840
It feels like being in a car with a toddler. [laughter]

169
00:13:09,216 --> 00:13:16,568
So next up is, we want to display these to a user.

170
00:13:16,560 --> 00:13:20,488
[Melinda thinks]

171
00:13:20,696 --> 00:13:23,144
DN: Is that worth a commit do you think?

172
00:13:23,140 --> 00:13:25,992
MS: Yes, it is, I keep forgetting that.

173
00:13:29,184 --> 00:13:33,408
We've got [inaud], seeds and then a question.

174
00:13:33,400 --> 00:13:44,768
[Silence]

175
00:13:45,368 --> 00:13:48,600
[New Chapter}

176
00:13:49,544 --> 00:13:53,424
DN: OK, so we've got the question
model, what do you want to do next?

177
00:13:55,360 --> 00:14:00,928
MS: The next thing is
displaying the questions to users.

178
00:14:01,456 --> 00:14:07,872
So we want to, I guess, show the image and the question,

179
00:14:07,870 --> 00:14:10,384
like... is this a hedgehog, is this a squirrel?

180
00:14:12,000 --> 00:14:14,920
And then maybe not quite yet...

181
00:14:15,660 --> 00:14:21,032
do the logic of allowing a user to answer yes or no.

182
00:14:21,390 --> 00:14:23,816
but maybe creating fake buttons initially,

183
00:14:23,832 --> 00:14:32,080
so we just display here's the image,
here's the question, and here are the buttons.

184
00:14:33,784 --> 00:14:35,808
Here I guess we need to figure out,

185
00:14:37,296 --> 00:14:39,400
how does the user get to these?

186
00:14:42,696 --> 00:14:44,184
DN:I suppose we could have...

187
00:14:44,184 --> 00:14:48,792
when the user logs in the route page
could be a list of questions to begin with,

188
00:14:49,160 --> 00:14:53,312
and each item in the list
would be a link to the question itself.

189
00:14:54,120 --> 00:14:57,312
MS: Yes, that's probably the easiest way to do it.

190
00:14:58,784 --> 00:15:00,992
OK, hmm...

191
00:15:03,624 --> 00:15:07,848
So let's go to our route file and start with that.

192
00:15:10,344 --> 00:15:12,496
So we...

193
00:15:12,490 --> 00:15:17,104
basically we want the route
of the page to be linked to the...

194
00:15:19,888 --> 00:15:21,424
to our questions.

195
00:15:21,420 --> 00:15:24,072
DN: So it's a questions index really.
MS: Yes.

196
00:15:26,064 --> 00:15:31,008
And we also want resources as questions.

197
00:15:32,580 --> 00:15:34,776
Well, our questions to resources. 

198
00:15:35,176 --> 00:15:37,584
and then  I always like doing this...

199
00:15:38,736 --> 00:15:44,016
To make sure that we are only
influencing the actions that we are using,

200
00:15:44,160 --> 00:15:48,344
rather than getting all 6 of
them and leaving those in place.

201
00:15:49,032 --> 00:15:53,848
DN: And in any case we don't want the
system to allow you to create questions... not yet.

202
00:15:54,240 --> 00:15:57,504
MS: No, so only the index can show for now.

203
00:16:00,544 --> 00:16:03,528
So let's make our questions controller.

204
00:16:03,520 --> 00:16:22,624
[Silence]

205
00:16:22,968 --> 00:16:25,664
As I said before, we have index...

206
00:16:28,000 --> 00:16:29,368
and show...

207
00:16:31,688 --> 00:16:35,104
DN: I notice you use a rails
generator when you're creating a model.

208
00:16:35,448 --> 00:16:38,528
[inaud] of creating a controller... is that normal?

209
00:16:38,992 --> 00:16:42,336
Uhm... [Melinda thinks]

210
00:16:42,624 --> 00:16:45,440
MS: I'm not sure I do that actually.

211
00:16:45,744 --> 00:16:50,024
Uhm... [Melinda] thinks again]

212
00:16:50,020 --> 00:16:55,296
Yes, I guess because I know
exactly what comes back when I...

213
00:16:57,256 --> 00:17:00,800
use generate model,

214
00:17:00,800 --> 00:17:05,728
and I always feel that with generate
controller I get more than I want.

215
00:17:05,752 --> 00:17:10,984
DN: Yes, it generates the asset
files, [inaud], JavaScripts and so on.

216
00:17:10,980 --> 00:17:13,400
MS: Yes, normally it's like...

217
00:17:13,744 --> 00:17:17,680
DN: More [inaud] that what you want.
MS Yes.

218
00:17:18,136 --> 00:17:21,376
And again I'm guessing there's an easier way

219
00:17:22,050 --> 00:17:27,232
specify which things you exactly
want when you generate the controller.

220
00:17:27,288 --> 00:17:31,944
But.. I kind of like having a
bit more control over it myself

221
00:17:31,952 --> 00:17:35,744
and being able to see when I'm adding [inaud]

222
00:17:36,448 --> 00:17:37,272
DN: Yes, sure.

223
00:17:37,270 --> 00:17:43,728
MS: While with a model you
get the rspec file, the user file and...

224
00:17:43,856 --> 00:17:47,376
[The migration is not meant to be on there]

225
00:17:47,920 --> 00:17:50,248
DN: So the model generator
gives you exactly what you want, 

226
00:17:50,264 --> 00:17:53,050
and you think the controller
generator gives you too much.

227
00:17:53,050 --> 00:17:55,600
MS: Yes, pretty much. [Laughter]

228
00:17:55,608 --> 00:17:57,150
DN: Yes, I can relate to that.

