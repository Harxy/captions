1
00:00:00,000 --> 00:00:03,977
Chapter 07
Specifying dependencies.

2
00:00:04,365 --> 00:00:08,580
JC: OK so we just committed the working target class.

3
00:00:09,600 --> 00:00:12,411
It can't do an awful lot just
yet, it can just run the commands.

4
00:00:12,410 --> 00:00:16,251
 So if we go back to...

5
00:00:17,817 --> 00:00:21,257
What did we have in here. My test file.

6
00:00:21,250 --> 00:00:28,925
When I was sketching this out earlier,
down here I told each of the targets to build. 

7
00:00:28,948 --> 00:00:32,102
They're all just isolated.

8
00:00:32,228 --> 00:00:37,165
A better user interface would be to do that.

9
00:00:37,668 --> 00:00:44,982
And have everything needed to
produce the final result just happen. 

10
00:00:46,080 --> 00:00:52,960
For that sort of thing you're going to need to
know for example, what bundle.js will depend on.

11
00:00:54,670 --> 00:00:58,251
Hello_js and complimenter_js 

12
00:00:58,250 --> 00:01:05,222
Whereas these won't depend on anything. 

13
00:01:06,240 --> 00:01:10,708
They are their own things. 

14
00:01:10,708 --> 00:01:12,700
Although they do arguably depend on their source code. In order for the build system to be lazy and work out if any more work needs doing, it will need to know about that relationship. So it's probably advisable if we... here we have these target objects to represent these things, but if we source files, we could say that they are e.g. hello coffee is a target new example source hello.coffee, which actually depends on nothing because the source code you wrote is not derived from anything and has no build instructions. Also, you wrote it; it doesn't need generating. And this can take that as a dependency and you can do the same for complementor and what have you.


