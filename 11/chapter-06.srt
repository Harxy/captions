1
00:00:00,000 --> 00:00:03,954
Chapter 06.
Raising an exception when a build step fails.

2
00:00:04,200 --> 00:00:08,262
JC: The thing that gets trickier about
this is when you have multiple instructions.

3
00:00:08,285 --> 00:00:10,251
You want them all to be executed

4
00:00:10,285 --> 00:00:13,222
but because they have side-effects you
want them done in a particular order.

5
00:00:13,230 --> 00:00:18,000
Specifying that with mocks
can be a bit tricky but...

6
00:00:18,217 --> 00:00:23,245
One thing that we can do, which is a use-case
I've not got to yet: what if any of them fails?

7
00:00:23,260 --> 00:00:25,577
So we can say something like: if the first one fails,

8
00:00:25,588 --> 00:00:30,102
the second one should not be executed
and that implies that there's an ordering.

9
00:00:31,897 --> 00:00:39,268
So let's do that context:
'when there are many instructions'

10
00:00:41,977 --> 00:00:54,274
let the instructions be first
instruction and second instruction.

11
00:00:54,280 --> 00:00:59,234
Again, it doesn't matter what these are
because we're not going to execute them.

12
00:00:59,622 --> 00:01:04,240
'it prints all the instructions'.

13
00:01:10,285 --> 00:01:13,257
Oh no, expect output.

14
00:01:16,380 --> 00:01:22,960
With first instruction once.

15
00:01:26,720 --> 00:01:30,800
And also the second instruction.

16
00:01:31,302 --> 00:01:34,240
When build the target.

17
00:01:37,554 --> 00:01:43,268
And we also want to execute all of the instructions.

18
00:01:46,290 --> 00:01:49,280
That should be the target in this case.

19
00:01:49,360 --> 00:02:01,451
And puts should be system when you build target.

20
00:02:01,790 --> 00:02:04,354
I believe these will work.

21
00:02:05,268 --> 00:02:08,388
They do.
TS: Great

22
00:02:08,510 --> 00:02:16,285
JC: Now we want to say
'when the first instruction fails'.

23
00:02:17,622 --> 00:02:23,150
TS: So you're saying here that it doesn't matter
what order it does it, that's not testing it?

24
00:02:23,150 --> 00:02:26,205
JC: No, rspec will not check.

25
00:02:26,285 --> 00:02:30,514
Rspec doesn't expect things to be called in
the order in which you set up the mocks.

26
00:02:30,510 --> 00:02:32,514
You could switch these lines around.

27
00:02:32,640 --> 00:02:37,120
If I switch those this will still pass.

28
00:02:38,822 --> 00:02:42,205
Even though that isn't what I want.

29
00:02:42,514 --> 00:02:47,588
But specifying that you want
things called in a certain order is... 

30
00:02:48,274 --> 00:02:52,297
the way that I program is inaud order specifying what.. but if you have something where one thing can prevent the next thing from happening, that implies an ordering.  It enough to say that one thing happens before the other.
TS: And that's something else that you want to test anyway.
JC: No, rspec will not check. It doesn't expect things t
be called in the order in which you set up the mocks.

