1
00:00:00,057 --> 00:00:03,977
[Chapter 02: Executing a build by hand.]

2
00:00:04,411 --> 00:00:09,165
So we have the code checked out over here. 

3
00:00:10,354 --> 00:00:14,940
So we've got a couple of files.

4
00:00:15,100 --> 00:00:18,022
I know we're going to need
coffeescript and also uglify, 

5
00:00:18,045 --> 00:00:23,977
so let's make a package.json
with those things in it.

6
00:00:24,274 --> 00:00:27,474
[Silence]

7
00:00:40,068 --> 00:00:43,234
TS: What will the package.json allow you to do?

8
00:00:43,230 --> 00:00:51,600
JG: Package.json is what npm
the node packaging system uses.

9
00:00:51,760 --> 00:00:58,217
And one of its functions is
to manage your dependencies.  

10
00:00:58,210 --> 00:01:01,908
There are two sets of dependencies,
dependencies and dev-dependencies.

11
00:01:01,900 --> 00:01:05,371
Dependencies are things that your
program uses in run time in production, 

12
00:01:05,370 --> 00:01:10,537
and dev-dependencies are things you use
for testing or examples, or what have you. 

13
00:01:11,470 --> 00:01:17,200
So coffeescript and uglify are
not going to be part of the tool, 

14
00:01:17,230 --> 00:01:19,051
they're things you can run with the tool.

15
00:01:19,097 --> 00:01:21,565
They'll be part of the examples so I'll put them in dev.

16
00:01:21,577 --> 00:01:23,497
TS: OK

17
00:01:24,560 --> 00:01:32,411
JC: So save that, and if you run
npm install it should install them for you. 

18
00:01:32,457 --> 00:01:36,308
So that's good.

19
00:01:36,468 --> 00:01:43,508
Packages that provide executables
npm puts those in `node_modules/.bin`. 

20
00:01:44,140 --> 00:01:47,222
And they just sit inside the project.

21
00:01:47,222 --> 00:01:54,811
So we should be able to compile each
of those things into a javascript file.

22
00:01:56,754 --> 00:01:59,874
And then minify them and concatenate the results. 

23
00:01:59,870 --> 00:02:03,634
So were going to need to do...

24
00:02:04,480 --> 00:02:09,980
[James thinks]

25
00:02:13,348 --> 00:02:18,610
Let's make another directory inside there and move...

26
00:02:21,862 --> 00:02:25,942
Can I do it that way? We'll soon find out.

27
00:02:26,057 --> 00:02:28,548
TS: Looks like it.

28
00:02:28,822 --> 00:02:36,800
JC: OK so those are in source,
we'll make another directory called lib. 

29
00:02:37,740 --> 00:02:43,234
So I want to run node modules.bin with coffee... 

30
00:02:47,977 --> 00:02:51,497
I want to compile and put the output in example lib. 

31
00:02:51,588 --> 00:02:55,760
And compile example source
with complimenter coffee.

32
00:02:57,760 --> 00:02:58,365
JC: That should have compiled that file in to the example lib.directory. So that has showed up ... a good example source complimenter that has code in it. So example lib complementor should look the same, like javascript. That does look reasonable. And then we'll do the same with the other file.

33
00:02:58,365 --> 00:02:59,451
TS: So what's that done?
JC: That should have compiled that file in to the example lib.directory. So that has showed up ... a good example source complimenter that has code in it. So example lib complementor should look the same, like javascript. That does look reasonable. And then we'll do the same with the other file.

34
00:02:59,451 --> 00:02:59,760
JC: That should have compiled that file in to the example lib.directory. So that has showed up ... a good example source complimenter that has code in it. So example lib complementor should look the same, like javascript. That does look reasonable. And then we'll do the same with the other file.

